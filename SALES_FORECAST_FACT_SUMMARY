SELECT * FROM 
  (select CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.OK ELSE a.OPPORTUNITY_KEY END AS "OPPORTUNITY_KEY",
CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.AK ELSE a.ACCOUNT_KEY END AS "ACCOUNT_KEY",
CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.PK ELSE a.PRODUCT_KEY END AS "PRODUCT_KEY",
a."USD_UPSELL_ACV__C",a."USD_NEW_ACV__C",a."USD_RENEWAL_ACV__C",a."LC_UPSELL_ACV__C",a."LC_NEW_ACV__C",a."LC_RENEWAL_ACV__C",
-- b."OK",b."AK",b."PK",
 CASE WHEN b.SBQQ__RENEWEDCONTRACT__C IS NULL THEN A.CK ELSE b.CONTRACT_KEY END AS "CONTRACT_KEY",
 CASE WHEN b.SBQQ__RENEWEDCONTRACT__C IS NULL THEN A.RENEWD_CONTRACT ELSE b.SBQQ__RENEWEDCONTRACT__C END AS "SBQQ__RENEWEDCONTRACT__C",
 CASE WHEN b.SBQQ__RENEWEDCONTRACT__C IS NULL THEN A.CNUMBER ELSE b.CONTRACTNUMBER END AS "CONTRACTNUMBER",
 CASE WHEN b.SBQQ__RENEWEDCONTRACT__C IS NULL THEN A.CONTNAME ELSE b.CNAME END AS "CNAME",
 CASE WHEN b.SBQQ__RENEWEDCONTRACT__C IS NULL THEN A.CONTSTARTDATE ELSE b.CSTARTDATE END AS "CSTARTDATE",
 CASE WHEN b.SBQQ__RENEWEDCONTRACT__C IS NULL THEN A.CONTENDDATE ELSE b.CENDDATE END AS "CENDDATE",
 b."USD_ORIGNAL_ACV",b."USD_MTLY_REC_REVENUE_MRR",b."LC_ORIGNAL_ACV",b."LC_MTLY_REC_REVENUE_MRR",
 CASE WHEN A.OPPORTUNITY_KEY IS NULL THEN B.PC ELSE A.PRODUCTCODE END AS "PRODUCTCODE",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.FAM ELSE a.FAMILY END AS "FAMILY",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.DM ELSE a.DELIVERY_METHOD__C END AS "DELIVERY_METHOD__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.PE ELSE a.PROCESSING_ENGINE__C END AS "PROCESSING_ENGINE__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.PBM ELSE a.PRICING_BUSINESS_MODEL__C END AS "PRICING_BUSINESS_MODEL__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.PM ELSE a.PRODUCT_FAMILY__C END AS "PRODUCT_FAMILY__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.BU ELSE a.BUSINESS_UNIT__C END AS "BUSINESS_UNIT__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.FP ELSE a.FORECAST_PRODUCT__C END AS "FORECAST_PRODUCT__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.ED ELSE a.EDITION__C END AS "EDITION__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN b.OS ELSE a.OPTION_SCALE__C END AS "OPTION_SCALE__C",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN 0 else a.RENEWALLINE_COUNT END AS "PRODUCT_COUNT",
 CASE WHEN a.OPPORTUNITY_KEY IS NULL THEN 0 ELSE a.LINETEM_SALES_COUNT end as "PRODUCT_COUNT_ZERO_SALES"
 from 

(SELECT A1.OPPORTUNITY_KEY ,A1.SBQQ__RENEWEDCONTRACT__C RENEWD_CONTRACT,A1.ACCOUNT_KEY,A1.PRODUCT_KEY,A1.USD_UPSELL_ACV__C,A1.USD_NEW_ACV__C,A1.USD_RENEWAL_ACV__C,A1.LC_UPSELL_ACV__C,A1.LC_NEW_ACV__C,A1.LC_RENEWAL_ACV__C,
B1.CONTRACT_KEY CK,B1.CONTRACTNUMBER CNUMBER,B1.NAME CONTNAME,B1.STARTDATE CONTSTARTDATE,B1.ENDDATE CONTENDDATE,A1.RENEWALLINE_COUNT,
P1.PRODUCTCODE,P1.FAMILY,P1.DELIVERY_METHOD__C,P1.PROCESSING_ENGINE__C,P1.PRICING_BUSINESS_MODEL__C,P1.PRODUCT_FAMILY__C,P1.BUSINESS_UNIT__C
,P1.FORECAST_PRODUCT__C,P1.EDITION__C,P1.OPTION_SCALE__C,A1.LINETEM_SALES_COUNT
FROM 
(SELECT O.OPPORTUNITY_KEY OPPORTUNITY_KEY,
O.SBQQ__RENEWEDCONTRACT__C,
    O.ACCOUNT_KEY,
    OL.PRODUCT2_KEY PRODUCT_KEY,
       SUM(nvl(OL.USD_UPSELL_ACV__C,0)) USD_UPSELL_ACV__C,
  SUM(nvl(OL.USD_NEW_ACV__C,0)) USD_NEW_ACV__C,
  SUM(nvl(OL.USD_RENEWAL_ACV__C,0)) USD_RENEWAL_ACV__C,
  SUM(nvl(OL.UPSELL_ACV__C,0)) LC_UPSELL_ACV__C,
  SUM(nvl(OL.NEW_ACV__C,0)) LC_NEW_ACV__C,
  SUM(nvl(OL.RENEWAL_ACV__C,0)) LC_RENEWAL_ACV__C,
  COUNT(*) RENEWALLINE_COUNT,
  CASE WHEN (SUM(nvl(OL.USD_UPSELL_ACV__C,0)) + SUM(nvl(OL.USD_NEW_ACV__C,0)) + SUM(nvl(OL.USD_RENEWAL_ACV__C,0))) =0 THEN COUNT(*) ELSE 0 END AS "LINETEM_SALES_COUNT"
FROM sales_dm.Opty_n_dim O inner join date_dim d on O.closedate=d.cal_date
inner join sales_dm.recordtype_n_dim b on O.recordtypeid = b.id
INNER JOIN sales_dm.Account_N_Dim A
ON A.ACCOUNT_KEY = O.ACCOUNT_KEY
INNER JOIN sales_dm.Opportunitylineitem_n_fact OL
ON OL.OPPORTUNITY_KEY = O.OPPORTUNITY_KEY
WHERE
(o.FORECASTCATEGORYNAME      IN ('Pipeline', 'Best Case', 'Commit', 'Closed')
OR o.STAGENAME                   IN ('Closed Lost')) and O.ISDELETED=0 AND A.ISDELETED=0 AND OL.ISDELETED=0 
GROUP BY O.OPPORTUNITY_KEY,O.SBQQ__RENEWEDCONTRACT__C,O.ACCOUNT_KEY,OL.PRODUCT2_KEY) A1
LEFT JOIN sales_dm.CONTRACT_N_DIM B1 ON A1.SBQQ__RENEWEDCONTRACT__C=B1.ID
LEFT JOIN sales_dm.PRODUCT2_N_DIM P1 ON A1.PRODUCT_KEY=P1.PRODUCT_KEY)  A
 FULL OUTER join
( SELECT A1.OPPORTUNITY_KEY OK,A1.SBQQ__RENEWEDCONTRACT__C,A1.ACCOUNT_KEY AK,A1.PRODUCT_KEY PK,A1.USD_ORIGNAL_ACV,A1.USD_MTLY_REC_REVENUE_MRR,A1.LC_ORIGNAL_ACV,A1.LC_MTLY_REC_REVENUE_MRR,
B1.CONTRACT_KEY,B1.CONTRACTNUMBER,B1.NAME CNAME,B1.STARTDATE CSTARTDATE,B1.ENDDATE CENDDATE,A1.SUBLINE_COUNT,
P1.PRODUCTCODE PC,P1.FAMILY FAM,P1.DELIVERY_METHOD__C DM,P1.PROCESSING_ENGINE__C PE,P1.PRICING_BUSINESS_MODEL__C PBM,P1.PRODUCT_FAMILY__C PM,
P1.BUSINESS_UNIT__C BU,P1.FORECAST_PRODUCT__C FP,P1.EDITION__C ED,P1.OPTION_SCALE__C OS,A1.SUBLINE_SALES_COUNT FROM 
(SELECT O.OPPORTUNITY_KEY ,
     O.SBQQ__RENEWEDCONTRACT__C,
    O.ACCOUNT_KEY ,
    p.PRODUCT_KEY ,
      SUM(nvl(S.USD_ORIGNAL_ACV,0)) USD_ORIGNAL_ACV ,
  SUM(nvl(S.USD_MTLY_REC_REVENUE_MRR*12,0)) USD_MTLY_REC_REVENUE_MRR,
        SUM(nvl(S.ORIGINAL_ACV__C,0)) LC_ORIGNAL_ACV ,
  SUM(nvl(S.MONTHLY_RECURRING_REVENUE_MRR_*12,0)) LC_MTLY_REC_REVENUE_MRR,
  COUNT(*) SUBLINE_COUNT,
  CASE WHEN SUM(nvl(S.USD_ORIGNAL_ACV,0))=0 THEN COUNT(*) END AS "SUBLINE_SALES_COUNT"
  FROM sales_dm.Opty_n_dim O,
    sales_dm.Account_N_Dim A ,
    sales_dm.contract_n_dim C,
    sales_dm.subscription_n_dim S,
    sales_dm.Product2_n_dim P
  WHERE A.ACCOUNT_KEY               = O.ACCOUNT_KEY
  AND O.SBQQ__RENEWEDCONTRACT__C    = C.ID
  AND S.CONTRACT_KEY                = C.CONTRACT_KEY
  AND P.PRODUCT_KEY                 = S.PRODUCT_KEY
  AND (o.FORECASTCATEGORYNAME      IN ('Pipeline', 'Best Case', 'Commit', 'Closed')
  OR o.STAGENAME                   IN ('Closed Lost'))
   and O.ISDELETED=0 AND A.ISDELETED=0 AND C.ISDELETED=0 AND S.ISDELETED=0 GROUP BY O.OPPORTUNITY_KEY,O.SBQQ__RENEWEDCONTRACT__C,O.ACCOUNT_KEY,p.PRODUCT_KEY) A1
  LEFT JOIN sales_dm.CONTRACT_N_DIM B1 ON A1.SBQQ__RENEWEDCONTRACT__C=B1.ID
  LEFT JOIN sales_dm.PRODUCT2_N_DIM P1 ON A1.PRODUCT_KEY=P1.PRODUCT_KEY)  B 
  on A.OPPORTUNITY_KEY=B.OK and A.Product_Key=B.PK)  where new_org_opportunity_number__c = 'OP1050826';
